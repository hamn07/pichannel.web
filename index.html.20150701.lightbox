<!DOCTYPE html>
<html>

<head>
    <title></title>
    <!-- load jQuery -->
    <!--<script src="js/jquery-1.11.1.min.js"></script>-->
    <script src="./bower_components/jquery/dist/jquery.min.js"></script>
    <!-- load lightbox -->
    <script src="./bower_components/lightbox/dist/js/lightbox.min.js"></script>
    <link rel="stylesheet" type="text/css" href="./bower_components/lightbox/dist/css/lightbox.css">
    <!-- load galleria -->
    <!-- css of this page -->
    <style type="text/css">
    /*最外層div*/
    
    #wrapper {
        margin: 0 auto;
    }
    /*導覽列*/
    
    nav {
        box-shadow: 0 5px 6px #d8d9db;
        border: 1px solid #d8d9db;
        background-color: #fff;
        height: 120px;
        position: relative;
        z-index: 1;
    }
    /*當scroll網頁時，導覽列固定於畫面頂部*/
    
    .fixed {
        position: fixed;
        left: 0;
        right: 0;
    }
    /* filter輸入框的div */
    
    .filter {
        display: none;
        padding: 2px;
        background-color: #000000;
        opacity: 0.7;
        color: #fff;
        font-size: 12px;
        position: absolute;
        right: 0px;
        top: 120px;
    }
    /* 主內容 */
    
    #content {
        background: #fff;
        /*height: 1500px;*/
        /* presetting the height */
        
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    }
    /* 個別圖片div */
    
    .image-frame {
        /*border: 4px solid #222;*/
        padding: 5px;
        border: 1px dashed #717171;
        margin: 5px 5px 5px 0;
        overflow: hidden;
        position: relative;
        float: left;
    }
    /* 個別圖片說明div */
    
    .caption {
        /*width: 125px;*/
        
        height: 30px;
        background: #000;
        color: #fff;
        font-weight: bold;
        /* fix it at the bottom */
        
        position: absolute;
        bottom: -1px;
        /* fix IE issue */
        
        left: 0;
        /* hide it by default */
        
        display: none;
        /* opacity setting */
        
        filter: alpha(opacity=70);
        /* ie  */
        
        -moz-opacity: 0.7;
        /* old mozilla browser like netscape  */
        
        -khtml-opacity: 0.7;
        /* for really really old safari */
        
        opacity: 0.7;
        /* css standard, currently it works in most modern browsers like firefox,  */
    }
    /* 個別圖片description */
    
    .image-frame .caption a:first-child {
        text-decoration: none;
        color: #fff;
        font-size: 12px;
        padding: 5px;
        display: inline-block;
    }
    /* 放大圖片div */
    
    .enlarge {
        width: 100%;
        display: inline-block;
    }
    
    .enlarge img {
        max-width: 100%;
        max-height: 100%;
        float: left;
    }
    </style>

</head>

<body>
    <div id="wrapper">
        <nav>
            <a href="#" id="fileSelect"><img src="img/Folder-Add-01-128.png" class="icon"></a>
            <input type="file" id="fileElem" multiple accept="image/*" style="display:none">
            <a href="#" id="urlSelect"><img src="img/Add-Earth-128.png"></a>
            <a href="#" id="play"><img src="img/Media-Play-02-128.png"></a>
            <a href="#" id="filterPopup" style=""><img src="img/Filtering-128.png"></a>
            <div id="filter" class="filter">
                <input type="search" id="searchText" placeholder="keyword">
            </div>
            <a href="#" id="audioSelect"><img src="img/Document-Music-01-128.png" class="icon"></a>
            <input type="file" id="audioElem" accept="audio/*" style="display:none">
        </nav>
        <div id="contentEnlarge" class="enlarge"></div>
        <div id="content"></div>
    </div>

    <!-- *************** -->
    <!-- js of this page -->
    <!-- *************** -->
    <script type="text/javascript">
    // in order to regex filename from url of an image
    String.prototype.filename = function(extension) {
            var s = this.replace(/\\/g, '/');
            s = s.substring(s.lastIndexOf('/') + 1);
            return extension ? s.replace(/[?#].+$/, '') : s.split('.')[0];
        }
        //Calculate the height of <header>
        //Use outerHeight() instead of height() if have padding
    var aboveHeight = $('nav').outerHeight();

    // when scroll
    $(window).scroll(function() {

        //if scrolled down more than the header's height
        if ($(window).scrollTop() > aboveHeight) {

            // if yes, add "fixed" class to the <nav>
            // add padding top to the #content (value is same as the height of the nav)
            $('nav').addClass('fixed').css('top', '0').next().css('padding-top', '60px');
        } else {

            // when scroll up or less than aboveHeight, remove the "fixed" class, and the padding-top
            $('nav').removeClass('fixed').next().css('padding-top', '0');
        }
    });


    var imgCount = 0;
    //----------------
    // document ready
    //----------------
    $(document).ready(function() {


        // 由網際網路位址加入圖片
        $("#urlSelect").click(function(e) {
                var imgUrl = prompt("Please enter image url:", "http://");
                if (imgUrl != null) {
                    myFuncRenderImage(imgUrl, imgUrl.filename(), false);
                }
            })
            // 由client端filesystem加入圖片
        $("#fileSelect").click(function(e) {
            if ($("#fileElem")) {
                $("#fileElem").click();
            }
            e.preventDefault();
        });
        // 由client端filesystem加入圖片
        $("#fileElem").change(function(e) {
                // 檔案(array)
                var fileList = this.files;
                // 檔案個數
                var numFiles = fileList.length;
                for (var i = 0; i < numFiles; i++) {
                    // 取得檔案物件
                    var file = fileList[i];
                    // 轉換成local url
                    var objectURL = window.URL.createObjectURL(file);

                    myFuncRenderImage(objectURL, file.name, true);
                }
            })
            // 由client端filesystem加入音樂
        $("#audioSelect").click(function(e) {
            if ($("#audioElem")) {
                $("#audioElem").click();

            }
            e.preventDefault();

        });
        // 由client端filesystem加入音樂
        $("#audioElem").change(function(e) {
                console.log($('#audioPlay'));
                $('#audioPlay').remove();
                // 檔案(array)
                var fileList = this.files;
                // 檔案個數
                var numFiles = fileList.length;
                for (var i = 0; i < numFiles; i++) {
                    // 取得檔案物件
                    var file = fileList[i];
                    // 轉換成local url
                    var objectURL = window.URL.createObjectURL(file);

                    $('<audio>', {
                        id: 'audioPlay',
                        src: objectURL,
                        // autoplay: true,
                        loop: true,
                    }).appendTo($('nav'));
                }
            })
            // filter的按鈕click事件
        $("#filterPopup").click(function() {
            if ($("#filter").css("display") == "none") {
                $("#filter").css("display", "block");
                $("#searchText").focus();
            } else {
                $("#filter").css("display", "none");

            }

        });
        // 在filter input text按下enter後，執行filter的作業
        $("#searchText").keypress(function(e) {
            searchTextValue = this.value.toLowerCase();
            if (!e) e = window.event;
            var keyCode = e.keyCode || e.which;
            if (keyCode == '13') {
                // Enter pressed
                var imgList = document.getElementsByClassName("image-frame");
                for (var i = 0; i < imgList.length; i++) {
                    var img = imgList[i];
                    var descText = $(img).children(".caption").children("a").html().toLowerCase();
                    if (descText.indexOf(searchTextValue) == -1) {
                        img.style.display = "none";
                        // console.log("not found --> "+descText);
                    } else {
                        img.style.display = "block";
                        // console.log("found --> "+descText);
                    }
                }
            }
        });

        // 全螢幕播放slide+music
        $('#play').click(function() {
            var imgItemArr = document.getElementsByClassName("image-frame");
            var data = [];
            data.length = 0;

            for (var i = 0; i < imgItemArr.length; i++) {
                if (imgItemArr[i].style.display != 'none') {
                    data.push({
                        image: imgItemArr[i].children[0].children[0].src,
                        title: imgItemArr[i].children[1].children[0].innerHTML
                    });
                }
            }
            // 使用遞迴搭配setTimeout的方式來輪播照片
            var fullscreenPlay = function(i, repo) {
                    // recursive - break point
                    if (i == repo.length) {
                        // 不repeat照片
                        // return;
                        // repeat照片
                        i = 0;
                    }
                    // 當離開fullscreen mode後, 要停止輪播
                    // 但第一張照片(i=0)進到迴圈時可能還沒到fullscreen mode, 所以再&i
                    if (!document.webkitIsFullScreen && i) {
                        return;
                    }

                    // recursive - do something here
                    // 清空#contentEnlarge
                    $("#contentEnlarge").empty();
                    // 將圖片append到#contentEnlarge
                    $('<img>', {
                        src: repo[i].image,
                        // class: 'enlarge',
                        // on: {
                        //     click: function() {
                        //         $("#contentEnlarge").empty();
                        //     }
                        // }
                    }).appendTo("#contentEnlarge");


                    // recursive - continue point
                    setTimeout(function() {
                        fullscreenPlay(i + 1, repo);

                    }, 5000);
                }
                // 搜尋不到image
            if (!data.length) {
                alert("no image loaded!");
                return;
            } else {
                // 將#contentEnlarge於fullscreen mode播放
                var elem = document.getElementById('contentEnlarge');
                if (document.webkitFullscreenElement) {
                    document.webkitCancelFullScreen();
                } else {
                    elem.webkitRequestFullScreen();
                };
                // 播放音樂
                if (document.getElementById("audioPlay") != null) {
                    document.getElementById("audioPlay").play();
                }
                // 使用遞迴搭配setTimeout的方式來輪播照片
                fullscreenPlay(0, data);

                // 
                // $('<div>', {
                //     id: 'galleria-div'
                // }).appendTo('#contentEnlarge');
                // Galleria.loadTheme('galleria/themes/azur/galleria.azur.min.js');
                // // Galleria.loadTheme('galleria/themes/classic/galleria.classic.min.js');
                // Galleria.run('#galleria-div', {
                //     transition: 'fade',
                //     height: 500,
                //     autoplay: 7000,
                //     dataSource: data,
                //     idleMode: false
                // });

                // setTimeout(function() {
                //     console.log('enter');
                // }, 3000);
                // console.log('3 sec.');
                // var gallery = Galleria.get(0);
                // gallery.toggleFullscreen();


            }
        });
    });
    // 功能: 創建圖片div, 並置入#content裡
    // url: 圖片位址
    // fileName: 圖片說明
    // isLocal: 是否為local image upload
    function myFuncRenderImage(url, fileName, isLocal) {

        // 建立div物件，並將img物件餵給它
        var imgItem = document.createElement("div");
        imgItem.className = "image-frame";
        $("#content").prepend(imgItem);


        // 建立img物件，並將src設定為local url
        var $img = $("<img>", {
            src: url,
            css: {
                'max-width': 'auto',
                'max-height': '15em',
                'float': 'left',
            },
            on: {
                click: function() {

                    if ($("#contentEnlarge").children().length) {

                        $("#contentEnlarge").empty();

                    } else {

                        // add img to #contentEnlarge
                        $('<img>', {
                            src: this.src,
                            on: {
                                click: function() {
                                    $("#contentEnlarge").empty();
                                }
                            }
                        }).appendTo("#contentEnlarge");
                    }
                },
                load: function() {
                    // 若不再操作可將之關閉
                    // window.URL.revokeObjectURL(this.src);
                },
            }
        });
        $('<a>', {
                'href': '#'
            })
            .append($img)
            .appendTo(imgItem);


        // 建立caption
        var $caption = $('<div>', {
            class: 'caption',
        });
        // append desc
        $caption.append($('<a>', {
            href: '#',
            html: fileName,
            on: {
                click: function() {
                    var modifiedDesc = prompt("Modify Description:", this.innerHTML);
                    if (modifiedDesc != null) {
                        this.innerHTML = modifiedDesc;
                    }
                }
            }
        }));
        // append remove icon
        $caption.append($('<a>', {
            'href': '#',
            'css': {
                'right': 1,
                'cssFloat': 'right'
            }
        }).append($('<img>', {
            src: "img/Cancel-24.png",
            click: function() {
                $(this).parent("a").parent().parent(".image-frame").remove();
            }
        })));

        $caption.appendTo(imgItem);



        //The .hover() method, when passed a single function, will execute that handler for both mouseenter and mouseleave events.
        $(imgItem).hover(function() {
                // $(this).children('a').children('img').animate({
                //     'width': $(this).width() * 1.2,
                //     'height': $(this).height() * 1.2,
                //     'top': -15,
                //     'left': -15
                // }, {
                //     duration: 200
                // });
                $(this).children('div').stop(false, true).fadeIn(200);
            },
            function() {
                // $(this).children('a').children('img').animate({
                //     'width': $(this).width(),
                //     'height': $(this).height(),
                //     'top': '0',
                //     'left': '0'
                // }, {
                //     duration: 100
                // });
                $(this).children('div').stop(false, true).fadeOut(200);
            }
        );
    }
    document.onkeyup = function(e) {
        if (!e) e = window.event;
        var keyCode = e.keyCode || e.which;
        if (keyCode == 27) {
            $("#filter").css("display", "none");
            $("#contentEnlarge").empty();
            window.scrollTo(0, 0);
        }
    }
    if (document.addEventListener) {
        document.addEventListener('webkitfullscreenchange', exitHandler, false);
        document.addEventListener('mozfullscreenchange', exitHandler, false);
        document.addEventListener('fullscreenchange', exitHandler, false);
        document.addEventListener('MSFullscreenChange', exitHandler, false);
    }

    function exitHandler() {
        // if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== null) {
        if (!document.webkitIsFullScreen) {
            /* Run code on exit */
            $("#contentEnlarge").empty();
            if (document.getElementById("audioPlay") != null) {
                document.getElementById("audioPlay").pause();
            }
        }
    }
    </script>
</body>
</html>
